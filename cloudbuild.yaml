steps:
  - name: gcr.io/kaniko-project/executor:v1.6.0
    args:
    - --dockerfile=/docker/web/Dockerfile
    - --build-arg=RAILS_ENV_ARG=${_RAILS_ENV}
    - --build-arg=SECRET_KEY_BASE=$$SECRET_KEY_BASE
    - --build-arg=DATABASE_USER=$$DATABASE_USER
    - --build-arg=DATABASE_NAME=$$DATABASE_NAME
    - --build-arg=DATABASE_PASSWORD=$$DATABASE_PASSWORD
    - --build-arg=DB_SOCKET=/cloudsql/${_CLOUD_SQL}
    - --build-arg=REGION=${_REGION}
    - --build-arg=GCP_PROJECT_ID=$PROJECT_ID
    - --destination=${_GCR_IMAGE}
    - --skip-tls-verify
    - --insecure
    - --cache=true
    - --cache-ttl=36h
    secretEnv: ['SECRET_KEY_BASE', 'DATABASE_USER', 'DATABASE_NAME', 'DATABASE_PASSWORD']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['beta', 'run', 'deploy', '${_SERVICE_NAME}',
          '--image', '${_GCR_IMAGE}',
          '--add-cloudsql-instances', '${_CLOUD_SQL}',
          '--allow-unauthenticated',
          '--vpc-connector', '${_VPC_CONNECTOR}',
          '--vpc-egress', '${_VPC_EGRESS}',
          '--region', '${_REGION}',
          '--cpu', '${_CPU}',
          '--memory', '${_MEMORY}',
          '--min-instances', '${_MIN_INSTANCES}',
          '--max-instances', '${_MAX_INSTANCES}',
          '--platform', 'managed',
          '--timeout', '${_TIMEOUT}',
          '--ingress', '${_INGRESS}',
          '--revision-suffix', '${_REVISION_SUFFIX}',
          '--set-env-vars', 'RAILS_ENV=${_RAILS_ENV}',
          '--set-env-vars', 'GCP_PROJECT_ID=$PROJECT_ID',
          '--set-env-vars', 'REGION=${_REGION}',
          '--set-env-vars', 'DB_SOCKET=/cloudsql/${_CLOUD_SQL}',
          '--set-secrets', 'SECRET_KEY_BASE=secret_key_base:latest',
          '--set-secrets', 'DATABASE_USER=database_name:latest',
          '--set-secrets', 'DATABASE_NAME=database_name:latest',
          '--set-secrets', 'DATABASE_PASSWORD=database_password:latest',]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['beta', 'run', 'services', 'update-traffic',  '${_SERVICE_NAME}', '--region', '${_REGION}', '--to-latest']

substitutions:
  _RAILS_ENV: 'production'
  _REGION: 'us-central1'
  _SERVICE_NAME: 'demo-app-service'
  _GCR_IMAGE: 'gcr.io/${PROJECT_ID}/${REPO_NAME}/${_SERVICE_NAME}'
  _INSTANCE_NAME: 'demo-app'
  _CPU: '1'
  _MEMORY: '512Mi'
  _REVISION_SUFFIX: 'pr-${_PR_NUMBER}'
  _MIN_INSTANCES: '0'
  _MAX_INSTANCES: '10'
  _TIMEOUT: '300'

availableSecrets:
  secretManager:
  - versionName: 'projects/$PROJECT_ID/secrets/secret_key_base/versions/latest'
    env: 'SECRET_KEY_BASE'
  - versionName: 'projects/$PROJECT_ID/secrets/database_name/versions/latest'
    env: 'DATABASE_NAME'
  - versionName: 'projects/$PROJECT_ID/secrets/database_user/versions/latest'
    env: 'DATABASE_USER'
  - versionName: 'projects/$PROJECT_ID/secrets/database_password/versions/latest'
    env: 'DATABASE_PASSWORD'

images:
  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
